# Ενότητες

Σημείωση: Ο παρακάτω σκελετός βασίζεται στο Gentle Introduction με προσαρμογές και επεκτάσεις από εμένα (ΙΖ) κυρίως στα προχωρημένα κεφάλαια.

* Βάσεις - Πρώτα βήματα
** Πρώτος χαιρετισμός: Hello World

Εκτελούμε μια γραμμή κώδικα πηγαίνοντας τον δρομέα (cursor) στην γραμμή αυτή, και πληκτρολογώντας control-enter, (στο macos, command-enter):

#+begin_src sclang
"Hello World".postln;
#+end_src

Παρατηρήσεις: Το κείμενο "Hello World" είναι σε εισαγωγικά έτσι ώστε να σχηματίσει ένα αντικείμενο σαν κείμενο.  Τέτοια αντικείμενα ανήκουν στην Κατηγορία (Class, Κλάση) =String=.

Γιά κάθε αντικείμενο μπορούμε να ρωτήσουμε την Κλάση του, στέλνοντας το μήνυμα "class", ως εξής:

#+begin_src sclang
"Hello World".class;
#+end_src

*** Στοιχειώδες συντατκό εντολών (statements) στο SuperCollider / sclang
Το αποτέλεσμα το βλέπουμε στο Post Window. Αυτό είναι το παράθυρο στο οποίο το SuperCollider, ή μάλλον το sclang, μας δείχνει πάντα το αποτέλεσμα της τελευταίας εντολής που εκτελέστηκε.   Η εντολή (statement), είναι το μικρότερη ενότητα κώδικα που μπορεί να εκτελεστεί αυτόνομα.  Αντιστοιχεί δηλαδή με μια πρόταση σε κείμενο.  Όπως οι προτάσεις χωρίζονται στο κείμενο από τελείες ("."), έτσι τα statements χωρίζονται στον κώδικα sclang με semicolon (";").

Τα δύο παραδείγματα που είδαμε παραπάνω είναι πολύ απλά statements που περιέχουν 2 χαρακτηριστικά μέρη:

Το πρώτο μέρος είναι το αντικείμενο "Hello World", που όπως είδαμε ανήκει στην Κλάση =String=.  Το δεύτερο μέρος χωρίζεται από το πρώτο με μια τελεία (".").  Αυτό δηλώνει ότι το δεύτερο μέρος είναι ένα μήνυμα (=message=), που 
 


** Εξυπηρετητής Ήχου και Εφαρμογή Γλώσσας Προγραμματισμού
*** Εκκίνηση εξυπηρετητή ήχου
*** Εκτέλεση κώδικα στο περιβάλλον προγραμματισμού
** Πρώτος ήχος
** Μηνύματα λάθους (Error messages)
** Αλλαγή παραμέτρων
** Σχόλια
** Κανόνες προτεραιότητας
** Λαμβάνοντας το τελευταίο αποτέλεσμα
** Καθαρίζουμε το παράθυρο ανακοινώσεων
** Ηχογραφούμε την έξοδο
* Μοτίβα (Patterns)
* Η Γλώσσα Προγραμματισμού σε μεγαλύτερο βάθος
* Σύνθεση και Επεξεργασία Ήχου 1: Δομή και έλεγχος αλγορίθμων σύνθεσης
* Σύνθεση και Επεξεργασία Ήχου 2: Δίαυλοι
* Σύνθεση και Επεξεργασία Ήχου 3: SynthDefs
* Σύνθεση και Επεξεργασία Ήχου 4: Buffers
* Προηγμένοι αλγόριθμοι σύνθεσης: Ανατροφοδότηση (Feedback)
* Προεκτάσεις του περιβάλλοντος προγραμματισμού: Βιβλιοθήκες και Quarks
* Γραφικό Περιβάλλον
* MIDI και OSC
* Closures
* Συγγραφή Κλάσεων (Classes) 

